{
  "_args": [
    [
      {
        "raw": "mime@^1.3.4",
        "scope": null,
        "escapedName": "mime",
        "name": "mime",
        "rawSpec": "^1.3.4",
        "spec": ">=1.3.4 <2.0.0",
        "type": "range"
      },
      "/Users/jessedavda/Desktop/ReactNativeProjects/Chat/Chat/node_modules/react-native"
    ]
  ],
  "_from": "mime@>=1.3.4 <2.0.0",
  "_id": "mime@1.5.0",
  "_inCache": true,
  "_location": "/mime",
  "_nodeVersion": "7.10.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/mime-1.5.0.tgz_1511386720367_0.24678691499866545"
  },
  "_npmUser": {
    "name": "broofa",
    "email": "robert@broofa.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mime@^1.3.4",
    "scope": null,
    "escapedName": "mime",
    "name": "mime",
    "rawSpec": "^1.3.4",
    "spec": ">=1.3.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-native"
  ],
  "_resolved": "https://registry.npmjs.org/mime/-/mime-1.5.0.tgz",
  "_shasum": "59c20e03ae116089edeb7d3b34a6788c5b3cccea",
  "_shrinkwrap": null,
  "_spec": "mime@^1.3.4",
  "_where": "/Users/jessedavda/Desktop/ReactNativeProjects/Chat/Chat/node_modules/react-native",
  "author": {
    "name": "Robert Kieffer",
    "email": "robert@broofa.com",
    "url": "http://github.com/broofa"
  },
  "bin": {
    "mime": "cli.js"
  },
  "bugs": {
    "url": "https://github.com/broofa/node-mime/issues"
  },
  "contributors": [
    {
      "name": "Benjamin Thomas",
      "email": "benjamin@benjaminthomas.org",
      "url": "http://github.com/bentomas"
    }
  ],
  "dependencies": {},
  "description": "A comprehensive library for mime-type mapping",
  "devDependencies": {
    "github-release-notes": "0.13.1",
    "mime-db": "1.31.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-v/jMDoK/qKptnTuC3YUNbIj8uUYvTCIHzVu9BHldKSWja48wusAtfjlcBlqnFrqClu3yf69ScDxBPrIyFnF51g==",
    "shasum": "59c20e03ae116089edeb7d3b34a6788c5b3cccea",
    "tarball": "https://registry.npmjs.org/mime/-/mime-1.5.0.tgz"
  },
  "gitHead": "949b4519c5a89484d532108f8eaa46c08772d06b",
  "homepage": "https://github.com/broofa/node-mime#readme",
  "keywords": [
    "util",
    "mime"
  ],
  "license": "MIT",
  "main": "mime.js",
  "maintainers": [
    {
      "name": "broofa",
      "email": "robert@broofa.com"
    },
    {
      "name": "bentomas",
      "email": "benjamin@benjaminthomas.org"
    }
  ],
  "name": "mime",
  "optionalDependencies": {},
  "readme": "# mime\n\nComprehensive MIME type mapping API based on mime-db module.\n\n## Install\n\nInstall with [npm](http://github.com/isaacs/npm):\n\n    npm install mime\n\n## Contributing / Testing\n\n    npm run test\n\n## Command Line\n\n    mime [path_string]\n\nE.g.\n\n    > mime scripts/jquery.js\n    application/javascript\n\n## API - Queries\n\n### mime.lookup(path)\nGet the mime type associated with a file, if no mime type is found `application/octet-stream` is returned. Performs a case-insensitive lookup using the extension in `path` (the substring after the last '/' or '.').  E.g.\n\n```js\nvar mime = require('mime');\n\nmime.lookup('/path/to/file.txt');         // => 'text/plain'\nmime.lookup('file.txt');                  // => 'text/plain'\nmime.lookup('.TXT');                      // => 'text/plain'\nmime.lookup('htm');                       // => 'text/html'\n```\n\n### mime.default_type\nSets the mime type returned when `mime.lookup` fails to find the extension searched for. (Default is `application/octet-stream`.)\n\n### mime.extension(type)\nGet the default extension for `type`\n\n```js\nmime.extension('text/html');                 // => 'html'\nmime.extension('application/octet-stream');  // => 'bin'\n```\n\n### mime.charsets.lookup()\n\nMap mime-type to charset\n\n```js\nmime.charsets.lookup('text/plain');        // => 'UTF-8'\n```\n\n(The logic for charset lookups is pretty rudimentary.  Feel free to suggest improvements.)\n\n## API - Defining Custom Types\n\nCustom type mappings can be added on a per-project basis via the following APIs.\n\n### mime.define()\n\nAdd custom mime/extension mappings\n\n```js\nmime.define({\n    'text/x-some-format': ['x-sf', 'x-sft', 'x-sfml'],\n    'application/x-my-type': ['x-mt', 'x-mtt'],\n    // etc ...\n});\n\nmime.lookup('x-sft');                 // => 'text/x-some-format'\n```\n\nThe first entry in the extensions array is returned by `mime.extension()`. E.g.\n\n```js\nmime.extension('text/x-some-format'); // => 'x-sf'\n```\n\n### mime.load(filepath)\n\nLoad mappings from an Apache \".types\" format file\n\n```js\nmime.load('./my_project.types');\n```\nThe .types file format is simple -  See the `types` dir for examples.\n",
  "readmeFilename": "README.md",
  "repository": {
    "url": "git+https://github.com/broofa/node-mime.git",
    "type": "git"
  },
  "scripts": {
    "changelog": "gren changelog --tags=all --generate --override",
    "prepublish": "node build/build.js > types.json",
    "test": "node build/test.js"
  },
  "version": "1.5.0"
}
